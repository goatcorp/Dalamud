// <auto-generated/>

using HexaGen.Runtime;
using System;
using System.Diagnostics;
using System.Numerics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;

namespace Dalamud.Bindings.ImGui;

public unsafe partial struct ImGuiStorage
{
		public unsafe void BuildSortByKey()
		{
			fixed (ImGuiStorage* @this = &this)
			{
				ImGuiNative.BuildSortByKey(@this);
			}
		}
		public unsafe void Clear()
		{
			fixed (ImGuiStorage* @this = &this)
			{
				ImGuiNative.Clear(@this);
			}
		}
		public unsafe bool GetBool(uint key, bool defaultVal)
		{
			fixed (ImGuiStorage* @this = &this)
			{
				byte ret = ImGuiNative.GetBool(@this, key, defaultVal ? (byte)1 : (byte)0);
				return ret != 0;
			}
		}
		public unsafe bool GetBool(uint key)
		{
			fixed (ImGuiStorage* @this = &this)
			{
				byte ret = ImGuiNative.GetBool(@this, key, (byte)(0));
				return ret != 0;
			}
		}
		public unsafe float GetFloat(uint key, float defaultVal)
		{
			fixed (ImGuiStorage* @this = &this)
			{
				float ret = ImGuiNative.GetFloat(@this, key, defaultVal);
				return ret;
			}
		}
		public unsafe float GetFloat(uint key)
		{
			fixed (ImGuiStorage* @this = &this)
			{
				float ret = ImGuiNative.GetFloat(@this, key, (float)(0.0f));
				return ret;
			}
		}
		public unsafe int GetInt(uint key, int defaultVal)
		{
			fixed (ImGuiStorage* @this = &this)
			{
				int ret = ImGuiNative.GetInt(@this, key, defaultVal);
				return ret;
			}
		}
		public unsafe int GetInt(uint key)
		{
			fixed (ImGuiStorage* @this = &this)
			{
				int ret = ImGuiNative.GetInt(@this, key, (int)(0));
				return ret;
			}
		}
		public unsafe void* GetVoidPtr(uint key)
		{
			fixed (ImGuiStorage* @this = &this)
			{
				void* ret = ImGuiNative.GetVoidPtr(@this, key);
				return ret;
			}
		}
		public unsafe void SetAllInt(int val)
		{
			fixed (ImGuiStorage* @this = &this)
			{
				ImGuiNative.SetAllInt(@this, val);
			}
		}
		public unsafe void SetBool(uint key, bool val)
		{
			fixed (ImGuiStorage* @this = &this)
			{
				ImGuiNative.SetBool(@this, key, val ? (byte)1 : (byte)0);
			}
		}
		public unsafe void SetFloat(uint key, float val)
		{
			fixed (ImGuiStorage* @this = &this)
			{
				ImGuiNative.SetFloat(@this, key, val);
			}
		}
		public unsafe void SetInt(uint key, int val)
		{
			fixed (ImGuiStorage* @this = &this)
			{
				ImGuiNative.SetInt(@this, key, val);
			}
		}
		public unsafe void SetVoidPtr(uint key, void* val)
		{
			fixed (ImGuiStorage* @this = &this)
			{
				ImGuiNative.SetVoidPtr(@this, key, val);
			}
		}
}
// DISCARDED: GetBoolRef
// DISCARDED: GetFloatRef
// DISCARDED: GetIntRef
// DISCARDED: GetVoidPtrRef

