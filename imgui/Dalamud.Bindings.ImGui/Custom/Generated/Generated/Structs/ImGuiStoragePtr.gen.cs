// <auto-generated/>

using HexaGen.Runtime;
using System;
using System.Diagnostics;
using System.Numerics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;

namespace Dalamud.Bindings.ImGui;

public unsafe partial struct ImGuiStoragePtr
{
		public unsafe void BuildSortByKey()
		{
			ImGuiNative.BuildSortByKey(Handle);
		}
		public unsafe void Clear()
		{
			ImGuiNative.Clear(Handle);
		}
		public unsafe bool GetBool(uint key, bool defaultVal)
		{
			byte ret = ImGuiNative.GetBool(Handle, key, defaultVal ? (byte)1 : (byte)0);
			return ret != 0;
		}
		public unsafe bool GetBool(uint key)
		{
			byte ret = ImGuiNative.GetBool(Handle, key, (byte)(0));
			return ret != 0;
		}
		public unsafe float GetFloat(uint key, float defaultVal)
		{
			float ret = ImGuiNative.GetFloat(Handle, key, defaultVal);
			return ret;
		}
		public unsafe float GetFloat(uint key)
		{
			float ret = ImGuiNative.GetFloat(Handle, key, (float)(0.0f));
			return ret;
		}
		public unsafe int GetInt(uint key, int defaultVal)
		{
			int ret = ImGuiNative.GetInt(Handle, key, defaultVal);
			return ret;
		}
		public unsafe int GetInt(uint key)
		{
			int ret = ImGuiNative.GetInt(Handle, key, (int)(0));
			return ret;
		}
		public unsafe void* GetVoidPtr(uint key)
		{
			void* ret = ImGuiNative.GetVoidPtr(Handle, key);
			return ret;
		}
		public unsafe void SetAllInt(int val)
		{
			ImGuiNative.SetAllInt(Handle, val);
		}
		public unsafe void SetBool(uint key, bool val)
		{
			ImGuiNative.SetBool(Handle, key, val ? (byte)1 : (byte)0);
		}
		public unsafe void SetFloat(uint key, float val)
		{
			ImGuiNative.SetFloat(Handle, key, val);
		}
		public unsafe void SetInt(uint key, int val)
		{
			ImGuiNative.SetInt(Handle, key, val);
		}
		public unsafe void SetVoidPtr(uint key, void* val)
		{
			ImGuiNative.SetVoidPtr(Handle, key, val);
		}
}
// DISCARDED: GetBoolRef
// DISCARDED: GetFloatRef
// DISCARDED: GetIntRef
// DISCARDED: GetVoidPtrRef

