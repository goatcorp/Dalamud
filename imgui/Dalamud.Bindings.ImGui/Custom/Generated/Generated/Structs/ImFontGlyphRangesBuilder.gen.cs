// <auto-generated/>

using HexaGen.Runtime;
using System;
using System.Diagnostics;
using System.Numerics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;

namespace Dalamud.Bindings.ImGui;

public unsafe partial struct ImFontGlyphRangesBuilder
{
		public unsafe void AddChar(ushort c)
		{
			fixed (ImFontGlyphRangesBuilder* @this = &this)
			{
				ImGuiNative.AddChar(@this, c);
			}
		}
		public unsafe void AddRanges(ushort* ranges)
		{
			fixed (ImFontGlyphRangesBuilder* @this = &this)
			{
				ImGuiNative.AddRanges(@this, ranges);
			}
		}
		public unsafe void BuildRanges(ImVector<ushort>* outRanges)
		{
			fixed (ImFontGlyphRangesBuilder* @this = &this)
			{
				ImGuiNative.BuildRanges(@this, outRanges);
			}
		}
		public unsafe void BuildRanges(ref ImVector<ushort> outRanges)
		{
			fixed (ImFontGlyphRangesBuilder* @this = &this)
			{
				fixed (ImVector<ushort>* poutRanges = &outRanges)
				{
					ImGuiNative.BuildRanges(@this, (ImVector<ushort>*)poutRanges);
				}
			}
		}
		public unsafe void Clear()
		{
			fixed (ImFontGlyphRangesBuilder* @this = &this)
			{
				ImGuiNative.Clear(@this);
			}
		}
		public unsafe void Destroy()
		{
			fixed (ImFontGlyphRangesBuilder* @this = &this)
			{
				ImGuiNative.Destroy(@this);
			}
		}
		public unsafe bool GetBit(nuint n)
		{
			fixed (ImFontGlyphRangesBuilder* @this = &this)
			{
				byte ret = ImGuiNative.GetBit(@this, n);
				return ret != 0;
			}
		}
		public unsafe void SetBit(nuint n)
		{
			fixed (ImFontGlyphRangesBuilder* @this = &this)
			{
				ImGuiNative.SetBit(@this, n);
			}
		}
}
// DISCARDED: AddText

