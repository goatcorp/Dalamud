// <auto-generated/>

using HexaGen.Runtime;
using System;
using System.Diagnostics;
using System.Numerics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;

namespace Dalamud.Bindings.ImGui;

public unsafe partial struct ImFontGlyphRangesBuilderPtr
{
		public unsafe void AddChar(ushort c)
		{
			ImGuiNative.AddChar(Handle, c);
		}
		public unsafe void AddRanges(ushort* ranges)
		{
			ImGuiNative.AddRanges(Handle, ranges);
		}
		public unsafe void BuildRanges(ImVector<ushort>* outRanges)
		{
			ImGuiNative.BuildRanges(Handle, outRanges);
		}
		public unsafe void BuildRanges(ref ImVector<ushort> outRanges)
		{
			fixed (ImVector<ushort>* poutRanges = &outRanges)
			{
				ImGuiNative.BuildRanges(Handle, (ImVector<ushort>*)poutRanges);
			}
		}
		public unsafe void Clear()
		{
			ImGuiNative.Clear(Handle);
		}
		public unsafe void Destroy()
		{
			ImGuiNative.Destroy(Handle);
		}
		public unsafe bool GetBit(nuint n)
		{
			byte ret = ImGuiNative.GetBit(Handle, n);
			return ret != 0;
		}
		public unsafe void SetBit(nuint n)
		{
			ImGuiNative.SetBit(Handle, n);
		}
}
// DISCARDED: AddText

