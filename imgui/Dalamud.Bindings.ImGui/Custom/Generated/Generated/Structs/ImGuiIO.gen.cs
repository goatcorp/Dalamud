// <auto-generated/>

using HexaGen.Runtime;
using System;
using System.Diagnostics;
using System.Numerics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;

namespace Dalamud.Bindings.ImGui;

public unsafe partial struct ImGuiIO
{
		public unsafe void AddFocusEvent(bool focused)
		{
			fixed (ImGuiIO* @this = &this)
			{
				ImGuiNative.AddFocusEvent(@this, focused ? (byte)1 : (byte)0);
			}
		}
		public unsafe void AddKeyAnalogEvent(ImGuiKey key, bool down, float v)
		{
			fixed (ImGuiIO* @this = &this)
			{
				ImGuiNative.AddKeyAnalogEvent(@this, key, down ? (byte)1 : (byte)0, v);
			}
		}
		public unsafe void AddKeyEvent(ImGuiKey key, bool down)
		{
			fixed (ImGuiIO* @this = &this)
			{
				ImGuiNative.AddKeyEvent(@this, key, down ? (byte)1 : (byte)0);
			}
		}
		public unsafe void AddMouseButtonEvent(int button, bool down)
		{
			fixed (ImGuiIO* @this = &this)
			{
				ImGuiNative.AddMouseButtonEvent(@this, button, down ? (byte)1 : (byte)0);
			}
		}
		public unsafe void AddMousePosEvent(float x, float y)
		{
			fixed (ImGuiIO* @this = &this)
			{
				ImGuiNative.AddMousePosEvent(@this, x, y);
			}
		}
		public unsafe void AddMouseViewportEvent(uint id)
		{
			fixed (ImGuiIO* @this = &this)
			{
				ImGuiNative.AddMouseViewportEvent(@this, id);
			}
		}
		public unsafe void AddMouseWheelEvent(float whX, float whY)
		{
			fixed (ImGuiIO* @this = &this)
			{
				ImGuiNative.AddMouseWheelEvent(@this, whX, whY);
			}
		}
		public unsafe void ClearInputCharacters()
		{
			fixed (ImGuiIO* @this = &this)
			{
				ImGuiNative.ClearInputCharacters(@this);
			}
		}
		public unsafe void ClearInputKeys()
		{
			fixed (ImGuiIO* @this = &this)
			{
				ImGuiNative.ClearInputKeys(@this);
			}
		}
		public unsafe void Destroy()
		{
			fixed (ImGuiIO* @this = &this)
			{
				ImGuiNative.Destroy(@this);
			}
		}
		public unsafe void SetAppAcceptingEvents(bool acceptingEvents)
		{
			fixed (ImGuiIO* @this = &this)
			{
				ImGuiNative.SetAppAcceptingEvents(@this, acceptingEvents ? (byte)1 : (byte)0);
			}
		}
		public unsafe void SetKeyEventNativeData(ImGuiKey key, int nativeKeycode, int nativeScancode, int nativeLegacyIndex)
		{
			fixed (ImGuiIO* @this = &this)
			{
				ImGuiNative.SetKeyEventNativeData(@this, key, nativeKeycode, nativeScancode, nativeLegacyIndex);
			}
		}
		public unsafe void SetKeyEventNativeData(ImGuiKey key, int nativeKeycode, int nativeScancode)
		{
			fixed (ImGuiIO* @this = &this)
			{
				ImGuiNative.SetKeyEventNativeData(@this, key, nativeKeycode, nativeScancode, (int)(-1));
			}
		}
}
// DISCARDED: AddInputCharacter
// DISCARDED: AddInputCharactersUTF8
// DISCARDED: AddInputCharacterUTF16

