<Project Sdk="Microsoft.NET.Sdk">
    <PropertyGroup Label="Target">
        <PlatformTarget>AnyCPU</PlatformTarget>
        <TargetFramework>net472</TargetFramework>
        <LangVersion>8.0</LangVersion>
        <Platforms>AnyCPU;x64</Platforms>
    </PropertyGroup>
    <PropertyGroup Label="Build">
        <OutputType>Library</OutputType>
        <OutputPath></OutputPath>
        <AppendTargetFrameworkToOutputPath>false</AppendTargetFrameworkToOutputPath>
        <DebugSymbols>true</DebugSymbols>
        <DebugType>full</DebugType>
        <DocumentationFile>$(SolutionDir)\bin\Dalamud.xml</DocumentationFile>
    </PropertyGroup>
    <PropertyGroup Label="Feature">
        <DalamudVersion>5.2.6.0</DalamudVersion>
        <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
        <AssemblyVersion>$(DalamudVersion)</AssemblyVersion>
        <Version>$(DalamudVersion)</Version>
        <FileVersion>$(DalamudVersion)</FileVersion>
    </PropertyGroup>
    <ItemGroup Label="Resources">
        <None Include="$(SolutionDir)/Resources/**/*" CopyToOutputDirectory="PreserveNewest" Visible="false" />
    </ItemGroup>
    <PropertyGroup Condition="'$(Configuration)'=='Release'">
        <AppOutputBase>$(MSBuildProjectDirectory)\</AppOutputBase>
        <PathMap>$(AppOutputBase)=C:\goatsoft\companysecrets\dalamud\</PathMap>
        <Deterministic>true</Deterministic>
    </PropertyGroup>
    <PropertyGroup>
        <GeneratePackageOnBuild>false</GeneratePackageOnBuild>
    </PropertyGroup>
    <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|AnyCPU'">
        <DefineConstants>DEBUG;TRACE</DefineConstants>
    </PropertyGroup>
    <ItemGroup>
        <None Remove="Resources\Lumina.Generated.dll" />
        <None Remove="stylecop.json" />
    </ItemGroup>
    <ItemGroup>
        <AdditionalFiles Include="stylecop.json" />
    </ItemGroup>
    <ItemGroup>
        <PackageReference Include="CheapLoc" Version="1.1.3" />
        <PackageReference Include="JetBrains.Annotations" Version="2020.3.0" />
        <PackageReference Include="Lumina" Version="3.1.0" />
        <PackageReference Include="Lumina.Excel" Version="5.50.0" />
        <PackageReference Include="Microsoft.CodeAnalysis.CSharp.Scripting" Version="3.0.0" />
        <PackageReference Include="Newtonsoft.Json" Version="12.0.2" />
        <PackageReference Include="PropertyChanged.Fody" Version="2.6.1" />
        <PackageReference Include="Serilog" Version="2.6.0" />
        <PackageReference Include="Serilog.Sinks.Async" Version="1.1.0" />
        <PackageReference Include="Serilog.Sinks.File" Version="4.0.0" />
        <PackageReference Include="EasyHook" Version="2.7.6270" />
        <PackageReference Include="SharpDX.Desktop" Version="4.2.0" />
        <PackageReference Include="StyleCop.Analyzers" Version="1.1.118">
            <PrivateAssets>all</PrivateAssets>
            <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
        </PackageReference>
    </ItemGroup>
    <ItemGroup>
        <Reference Include="System.Net.Http" />
    </ItemGroup>
    <ItemGroup>
        <Compile Update="Properties\Resources.Designer.cs">
            <DesignTime>True</DesignTime>
            <AutoGen>True</AutoGen>
            <DependentUpon>Resources.resx</DependentUpon>
        </Compile>
    </ItemGroup>
    <ItemGroup>
        <EmbeddedResource Update="Properties\Resources.resx">
            <Generator>ResXFileCodeGenerator</Generator>
            <LastGenOutput>Resources.Designer.cs</LastGenOutput>
        </EmbeddedResource>
    </ItemGroup>
    <ItemGroup>
        <ProjectReference Include="..\lib\FFXIVClientStructs\FFXIVClientStructs.csproj" />
        <ProjectReference Include="..\lib\ImGuiScene\deps\ImGui.NET\src\ImGui.NET-472\ImGui.NET-472.csproj" />
        <ProjectReference Include="..\lib\ImGuiScene\deps\SDL2-CS\SDL2-CS.csproj" />
        <ProjectReference Include="..\lib\ImGuiScene\ImGuiScene\ImGuiScene.csproj" />
    </ItemGroup>
    <ItemGroup>
        <ContentWithTargetPath Include="Resources\Lumina.Generated.dll">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
            <TargetPath>Lumina.Generated.dll</TargetPath>
        </ContentWithTargetPath>
    </ItemGroup>

    <Target Name="GetGitHash" BeforeTargets="WriteGitHash" Condition="'$(BuildHash)' == ''">
        <PropertyGroup>
            <!-- temp file for the git version (lives in "obj" folder)-->
            <VerFile>$(IntermediateOutputPath)gitver</VerFile>
        </PropertyGroup>
        <!-- write the hash to the temp file.-->
        <Exec Command="git -C &quot;$(ProjectDir.Replace('\','\\'))&quot; describe --long --always --dirty &gt; $(VerFile)" />
        <!-- read the version into the GitVersion itemGroup-->
        <ReadLinesFromFile File="$(VerFile)">
            <Output TaskParameter="Lines" ItemName="GitVersion" />
        </ReadLinesFromFile>
        <!-- Set the BuildHash property to contain the GitVersion, if it wasn't already set.-->
        <PropertyGroup>
            <BuildHash>@(GitVersion)</BuildHash>
        </PropertyGroup>
    </Target>
    <Target Name="WriteGitHash" BeforeTargets="CoreCompile">
        <!-- names the obj/.../CustomAssemblyInfo.cs file -->
        <PropertyGroup>
            <CustomAssemblyInfoFile>$(IntermediateOutputPath)CustomAssemblyInfo.cs</CustomAssemblyInfoFile>
        </PropertyGroup>
        <!-- includes the CustomAssemblyInfo for compilation into your project -->
        <ItemGroup>
            <Compile Include="$(CustomAssemblyInfoFile)" />
        </ItemGroup>
        <!-- defines the AssemblyMetadata attribute that will be written -->
        <ItemGroup>
            <AssemblyAttributes Include="AssemblyMetadata">
                <_Parameter1>GitHash</_Parameter1>
                <_Parameter2>$(BuildHash)</_Parameter2>
            </AssemblyAttributes>
        </ItemGroup>
        <!-- writes the attribute to the customAssemblyInfo file -->
        <WriteCodeFragment Language="C#" OutputFile="$(CustomAssemblyInfoFile)" AssemblyAttributes="@(AssemblyAttributes)" />
    </Target>
</Project>
